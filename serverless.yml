service: documentRestApi

provider:
  name: aws
  runtime: dotnetcore2.1
  region: eu-west-1
  profile: serverless-admin
  timeout: 15
  memorySize: 128
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

package:
  individually: true

functions:
  create:
    handler: CsharpHandlers::AwsDotnetCsharp.Handler::CreateAsync
    events :
      - http:
          path: document
          method: post
          cors: true
    package:
      artifact: bin/release/netcoreapp2.1/DocumentRestApi.zip

  list:
    handler: CsharpHandlers::AwsDotnetCsharp.Handler::ListAsync
    events :
      - http:
          path: document
          method: get
          cors: true
    package:
      artifact: bin/release/netcoreapp2.1/DocumentRestApi.zip

  get:
    handler: CsharpHandlers::AwsDotnetCsharp.Handler::GetAsync
    events :
      - http:
          path: document/{id}
          method: get
          cors: true          
    package:
      artifact: bin/release/netcoreapp2.1/DocumentRestApi.zip

  update:
    handler: CsharpHandlers::AwsDotnetCsharp.Handler::UpdateAsync
    events:
      - http:
          path: document/{id}
          method: put
          cors: true
    package:
      artifact: bin/release/netcoreapp2.1/DocumentRestApi.zip

  delete:
    handler: CsharpHandlers::AwsDotnetCsharp.Handler::DeleteAsync
    events:
      - http:
          path: document/{id}
          method: delete
          cors: true
    package:
      artifact: bin/release/netcoreapp2.1/DocumentRestApi.zip

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}